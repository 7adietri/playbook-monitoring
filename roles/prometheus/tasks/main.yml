---
- name: create user
  user:
    name: prometheus
    system: yes
    create_home: no
    shell: /bin/false

- name: create folders
  file:
    path: "{{ item }}"
    state: directory
    owner: prometheus
    group: prometheus
    mode: 0750
  loop:
    - "{{ prometheus_etc }}"
    - "{{ prometheus_etc }}/auth"
    - "{{ prometheus_etc }}/targets"
    - "{{ prometheus_data }}"
    - "{{ prometheus_path }}"

- name: download release
  get_url:
    url: "{{ prometheus_release }}"
    dest: "{{ prometheus_path }}/.prometheus.tgz"
    checksum: "{{ prometheus_checksum }}"
  register: release

- name: extract release
  unarchive:
    src: "{{ prometheus_path }}/.prometheus.tgz"
    dest: "{{ prometheus_path }}"
    extra_opts: "--strip-components=1"
    owner: prometheus
    group: prometheus
    remote_src: yes
  when: release.changed
  notify: restart prometheus

- include_tasks: password.yml
  vars:
    username: "{{ inventory_hostname }}"
    password_file: "{{ prometheus_etc }}/auth/{{ username }}"

- name: template targets
  include_tasks: targets.yml
  loop: "{{ groups.get('monitoring_targets', []) }}"
  loop_control:
    loop_var: hostname

- name: check for config
  stat: path={{ prometheus_etc }}/prometheus.yml
  register: config

- name: copy default config
  copy:
    src: "{{ prometheus_path }}/prometheus.yml"
    dest: "{{ prometheus_etc }}"
    owner: prometheus
    group: prometheus
    remote_src: yes
  when: not config.stat.exists

- name: template service
  template:
    src: prometheus.service
    dest: /etc/systemd/system/
  notify: restart prometheus

- name: enable service
  systemd:
    name: prometheus
    enabled: yes
    daemon_reload: yes
